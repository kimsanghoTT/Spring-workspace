<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        <!-- window -> preference -> xml(wild web developer)
        	-> Download external ~ 체크 후 적용하면 에러 해결
        -->
<!-- mapper로 sql 작성이 어디서부터 어디까지인지 범위 설정 -->
<!-- namespace : 나중에 java 파일 중에서 어떤 파일로 db 작성 내용을 전달받고, 전달할지 파일 지정 -->
<mapper namespace="com.example.demo.mapper.MemberMapper">

	<!-- id : 나중에 MemberMapper로 만든 interface에 전달할 명칭 -->
	<!-- parameterType : dto 중에서 어떤 java 파일을 바라볼지 선택 -->
	<!-- 
	 id값을 insertMember로 작성했다면 Java 파일에서 Mapper Service Controller
	 모두 insertMember로 통일.
	 
	 -> 하나로 통일하지 않아도 되지만 Spring Boot는 @과 properties에 작성한 경로를 통해
	 임의적으로 이동하기 때문에 이름이 다를 경우에는 파일 위치를 찾지 못하거나 실행이 안될 수 있음
	 
	  -->
	<insert id="insertMember" parameterType="com.example.demo.dto.Member">
	
	
	insert into member(member_id, member_name, member_age, member_phone)
	<!-- DB에 저장된 컬럼명 -->
	values (member_seq.NEXTVAL, #{memberName}, #{memberAge}, #{memberPhone})
	<!-- DTO 폴더에 작성된 Member 객체 안에 적혀있는 변수명 -->
	</insert>
	<!-- select, update, delete 작성 가능
		select는 parameterType 대신 resultSet을 사용해서 검색이나 조회한 결과를 java에 전달
		
	
	 -->
</mapper>